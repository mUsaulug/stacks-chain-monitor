spring:
  application:
    name: stacks-chain-monitor

  # Database Configuration
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/stacks_monitor}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver

    # HikariCP Connection Pool Configuration
    hikari:
      maximum-pool-size: 15
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      pool-name: StacksMonitorHikariCP
      auto-commit: true
      connection-test-query: SELECT 1

  # JPA/Hibernate Configuration
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: false
        jdbc:
          batch_size: 50
          fetch_size: 50
        order_inserts: true
        order_updates: true
        query:
          in_clause_parameter_padding: true
        # Enable second-level cache for production (requires Redis)
        cache:
          use_second_level_cache: false
    show-sql: false
    open-in-view: false

  # Flyway Migration Configuration
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    validate-on-migrate: true

  # Cache Configuration (MVP: Simple, Production: Redis)
  cache:
    type: simple
    cache-names:
      - alertRules
      - activeUsers
      - monitoredContracts
    simple:
      # Cache entries expire after 10 minutes
      spec: maximumSize=1000,expireAfterWrite=600s

  # Mail Configuration (SMTP)
  mail:
    host: ${SMTP_HOST:smtp.gmail.com}
    port: ${SMTP_PORT:587}
    username: ${SMTP_USERNAME:}
    password: ${SMTP_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

  # Actuator Configuration
  management:
    endpoints:
      web:
        exposure:
          include: health,info,prometheus,metrics
        base-path: /actuator
    endpoint:
      health:
        show-details: when-authorized
        show-components: when-authorized
      prometheus:
        enabled: true
    metrics:
      export:
        prometheus:
          enabled: true
      tags:
        application: ${spring.application.name}
    info:
      env:
        enabled: true

  # Task Execution Configuration (for @Async)
  task:
    execution:
      pool:
        core-size: 5
        max-size: 10
        queue-capacity: 100
      thread-name-prefix: async-task-

# Application-specific configuration
stacks:
  monitoring:
    # Chainhook webhook configuration
    webhook:
      hmac-secret: ${CHAINHOOK_HMAC_SECRET:change-me-in-production}
      enabled: true

    # Alert engine configuration
    alert:
      batch-size: 100
      evaluation-timeout-ms: 5000
      notification-retry-max-attempts: 3
      notification-retry-backoff-ms: 1000

    # Notification configuration
    notification:
      email:
        from: ${NOTIFICATION_EMAIL_FROM:noreply@stacks-monitor.com}
        enabled: ${NOTIFICATION_EMAIL_ENABLED:true}
      webhook:
        enabled: ${NOTIFICATION_WEBHOOK_ENABLED:true}
        timeout-ms: 5000

# Security configuration
security:
  jwt:
    secret-key: ${JWT_SECRET_KEY:change-me-in-production-use-256-bit-key}
    expiration-ms: 86400000 # 24 hours
    issuer: stacks-chain-monitor

  rate-limit:
    enabled: true
    requests-per-minute: 100

# Logging Configuration
logging:
  level:
    root: INFO
    com.stacksmonitoring: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/stacks-monitor.log
    max-size: 10MB
    max-history: 30

# OpenAPI Documentation Configuration
springdoc:
  api-docs:
    path: /api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operations-sorter: method
    tags-sorter: alpha
  show-actuator: true

# Resilience4j Configuration (Circuit Breaker & Retry)
resilience4j:
  circuitbreaker:
    instances:
      emailNotification:
        register-health-indicator: true
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        wait-duration-in-open-state: 30s
        failure-rate-threshold: 50
      webhookNotification:
        register-health-indicator: true
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        wait-duration-in-open-state: 30s
        failure-rate-threshold: 50

  retry:
    instances:
      emailNotification:
        max-attempts: 3
        wait-duration: 1s
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2
      webhookNotification:
        max-attempts: 3
        wait-duration: 1s
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2
